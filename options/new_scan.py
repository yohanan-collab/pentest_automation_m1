import re
from colorama import Fore
import nmap
from tabulate import tabulate
import vulners



def extract_version(version_string):
    # Utilisation d'une expression régulière pour extraire la version principale (par exemple, "7.6")
    version_match = re.search(r'(\d+\.\d+\.\d+)', version_string)
    if version_match:
        return version_match.group(1)
    else:
        return ''

def Nmap(ip, html_render=False):
    nm = nmap.PortScanner()
    nm.scan(ip, '21-8080')

    results = []
    if html_render:
        table_html = "<table class='w-full'>\n<thead>\n<tr>\n<th class='px-4 py-2'>Host</th>\n<th class='px-4 py-2'>Port</th>\n<th class='px-4 py-2'>Service</th>\n<th class='px-4 py-2'>Version</th>\n</tr>\n</thead>\n<tbody>"

        for host in nm.all_hosts(): 
            for proto in nm[host].all_protocols(): 
                ports = nm[host][proto].keys() 
                for port in ports: state = nm[host][proto][port]['state'] 
                if state == 'open': 
                    service = nm[host][proto][port]['name'] 
                    version = extract_version(nm[host][proto][port]['version']) if 'version' in nm[host][proto][port] else '' 
                    table_html += f"<tr class='border-b'><td class='border px-4 py-2'>{host}</td><td class='border px-4 py-2'>{port}</td><td class='border px-4 py-2'>{service}</td><td class='border px-4 py-2'>{version}</td></tr>\n"

        table_html += "</tbody>\n</table>" 
        return table_html

        
    else:
        for host in nm.all_hosts():
            for proto in nm[host].all_protocols():
                ports = nm[host][proto].keys()
                for port in ports:
                    state = nm[host][proto][port]['state']
                    if state == 'open':
                        service = nm[host][proto][port]['name']
                    version = extract_version(nm[host][proto][port]['version']) if 'version' in nm[host][proto][port] else ''
                    results.append([host, port, service, version])
        return results           


